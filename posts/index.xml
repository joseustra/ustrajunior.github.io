<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on José Ustra - My code experiments</title><link>https://ustrajunior.com/posts/</link><description>Recent content in Posts on José Ustra - My code experiments</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>&amp;copy; &lt;a href="https://github.com/ustrajunior">José Ustra&lt;/a> 2023</copyright><lastBuildDate>Mon, 19 Jul 2021 20:26:35 +0100</lastBuildDate><atom:link href="https://ustrajunior.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Reloading Neovim Config With Telescope</title><link>https://ustrajunior.com/posts/reloading-neovim-config-with-telescope/</link><pubDate>Mon, 19 Jul 2021 20:26:35 +0100</pubDate><guid>https://ustrajunior.com/posts/reloading-neovim-config-with-telescope/</guid><description>Recently, I&amp;rsquo;ve decided to change my Neovim configuration to use Lua. If you want to do it too, this guide has much information about what you need to do.
In Lua, when you require a module, it is cached, so next time you require it, you are not getting the changes. The problem with this is that I usually have two open tabs with a few splits each when I&amp;rsquo;m working.</description></item><item><title>json: unmarshal custom date formats</title><link>https://ustrajunior.com/posts/json-unmarshal-custom-date-formats/</link><pubDate>Thu, 03 Nov 2016 19:40:18 +0000</pubDate><guid>https://ustrajunior.com/posts/json-unmarshal-custom-date-formats/</guid><description>When we are building a JSON API, many times we have to deal with dates that we can&amp;rsquo;t have control of the layout.</description></item><item><title>Variadic functions in Go</title><link>https://ustrajunior.com/posts/variadic-functions-in-go/</link><pubDate>Fri, 21 Oct 2016 18:55:08 +0000</pubDate><guid>https://ustrajunior.com/posts/variadic-functions-in-go/</guid><description>Variadic functions allows you to have a variable number of arguments. Let&amp;rsquo;s see how.</description></item></channel></rss>